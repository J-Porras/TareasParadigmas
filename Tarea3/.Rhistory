collatz <- function(n) {
# n is the initial number
if(n == 1){
return (0)
}
else{
if (n %% 2 == 0) {
return ((collatz(n/2)) + 1)
} else {
return ((collatz(3*n + 1)) + 1)
}
}
}
collatz(16)
collatz(12)
collatz(31)
clasificacion(10)
clasificacion(6)
clasificacion(47)
es.factor <- function(x, k){
if((x %% k) == 0){
return (TRUE)
}
return (FALSE)
}
suma.factores <- function(x,k){
if(k > (x/2)){
return (0)
}
else{
if(es.factor(x,k)){
return (suma.factores(x,(k+1) + k))
}
else{
return (suma.factores(x,(k+1)))
}
}
}
clasificacion <- function(n){
if(suma.factores(n,1) == n){
cat("Perfecto")
}
else{
if(suma.factores(n,1) > n){
cat("Abundante")
}
else{
cat("Defectivo")
}
}
}
clasificacion(10)
clasificacion(6)
clasificacion(47)
es.factor <- function(x, k){
if((x %% k) == 0){
return (TRUE)
}
return (FALSE)
}
suma.factores <- function(x,k){
if(k > (x/2)){
return (0)
}
else{
if(es.factor(x,k)){
return (suma.factores(x,(k+1) + k))
}
else{
return (suma.factores(x,(k+1)))
}
}
}
clasificacion <- function(n){
if(suma.factores(n,1) == n){
cat("Perfecto")
}
else{
if(suma.factores(n,1) > n){
cat("Abundante")
}
else{
cat("Defectivo")
}
}
}
clasificacion(10)
clasificacion(6)
clasificacion(6)
clasificacion(6)
clasificacion(47)
es.factor(3,6)
es.factor(6,3)
if((k %% x) == 0){
return (TRUE)
}
clasificacion(10)
clasificacion(6)
clasificacion(47)
es.factor <- function(x, k){
if((k %% x) == 0){
return (TRUE)
}
return (FALSE)
}
suma.factores <- function(x,k){
if(k > ((x/2)+1)){
return (0)
}
else{
if(es.factor(x,k)){
return (suma.factores(x,(k+1) + k))
}
else{
return (suma.factores(x,(k+1)))
}
}
}
clasificacion <- function(n){
if(suma.factores(n,1) == n){
cat("Perfecto")
}
else{
if(suma.factores(n,1) > n){
cat("Abundante")
}
else{
cat("Defectivo")
}
}
}
clasificacion(10)
clasificacion(6)
clasificacion(47)
es.factor(3,6)
es.factor(2,6)
es.factor <- function(x, k){
if((k %% x) == 0){
return (TRUE)
}
return (FALSE)
}
suma.factores <- function(x,k){
if(k < ((x/2)+1)){
return (0)
}
else{
if(es.factor(x,k)){
return (suma.factores(x,(k+1) + k))
}
else{
return (suma.factores(x,(k+1)))
}
}
}
clasificacion <- function(n){
if(suma.factores(n,1) == n){
cat("Perfecto")
}
else{
if(suma.factores(n,1) > n){
cat("Abundante")
}
else{
cat("Defectivo")
}
}
}
clasificacion(10)
clasificacion(6)
clasificacion(47)
if(suma.factores(n,1) > n){
cat("Abundante")
}
clasificacion(6)
else{
es.factor <- function(x, k){
if((k %% x) == 0){
return (TRUE)
}
return (FALSE)
}
suma.factores <- function(x,k){
if(k > ((x/2)+1)){
return (0)
}
else{
if(es.factor(x,k)){
return (suma.factores(x,(k+1) + k))
}
else{
return (suma.factores(x,(k+1)))
}
}
}
clasificacion <- function(n){
if(suma.factores(n,1) == n){
cat("Perfecto")
}
else{
if(suma.factores(n,1) > n){
cat("Abundante")
}
else{
cat("Defectivo")
}
}
}
clasificacion(10)
clasificacion(6)
debugSource("C:/Users/Andrés/Porras/UNIVERSIDAD NACIONAL/Carrera/Paradigmas Programacion/Tareas/Tarea3/Tarea3R.R")
clasificacion(10)
clasificacion(6)
clasificacion(47)
debugSource("C:/Users/Andrés/Porras/UNIVERSIDAD NACIONAL/Carrera/Paradigmas Programacion/Tareas/Tarea3/Tarea3R.R")
install.packages("knitr", dependencies = T)
debugSource("C:/Users/Andrés/Porras/UNIVERSIDAD NACIONAL/Carrera/Paradigmas Programacion/Tareas/Tarea3/Tarea3R.R")
debugSource("C:/Users/Andrés/Porras/UNIVERSIDAD NACIONAL/Carrera/Paradigmas Programacion/Tareas/Tarea3/Tarea3R.R")
debugSource("C:/Users/Andrés/Porras/UNIVERSIDAD NACIONAL/Carrera/Paradigmas Programacion/Tareas/Tarea3/Tarea3R.R")
debugSource("C:/Users/Andrés/Porras/UNIVERSIDAD NACIONAL/Carrera/Paradigmas Programacion/Tareas/Tarea3/Tarea3R.R")
debugSource("C:/Users/Andrés/Porras/UNIVERSIDAD NACIONAL/Carrera/Paradigmas Programacion/Tareas/Tarea3/Tarea3R.R")
debugSource("C:/Users/Andrés/Porras/UNIVERSIDAD NACIONAL/Carrera/Paradigmas Programacion/Tareas/Tarea3/Tarea3R.R")
debugSource("C:/Users/Andrés/Porras/UNIVERSIDAD NACIONAL/Carrera/Paradigmas Programacion/Tareas/Tarea3/Tarea3R.R")
es.factor(2,6)
es.factor(4,6)
clasificacion(6)
clasificacion(47)
clasificacion(10)
clasificacion(6)
clasificacion(47)
clasificacion(10)
source("C:/Users/Andrés/Porras/UNIVERSIDAD NACIONAL/Carrera/Paradigmas Programacion/Tareas/Tarea3/Tarea3R.R")
clasificacion(6)
clasificacion(47)
clasificacion(10)
clasificacion(6)
clasificacion(47)
clasificacion(10)
clasificacion(6)
clasificacion(47)
clasificacion(10)
es.factor(4,6)
es.factor(2,6)
clasificacion(6)
clasificacion(47)
clasificacion(10)
debugSource("C:/Users/Andrés/Porras/UNIVERSIDAD NACIONAL/Carrera/Paradigmas Programacion/Tareas/Tarea3/Tarea3R.R")
clasificacion(6)
clasificacion(47)
clasificacion(10)
suma.factores <- function(x,k){
if(k > ((x/2)+1)){
return (0)
}
else{
if((x %% k) == 0){
return (k + suma.factores(x,(k+1)))
}
else{
return (suma.factores(x,(k+1)))
}
}
}
clasificacion <- function(n){
if(suma.factores(n,1) == n){
cat("Perfecto")
}
else{
if(suma.factores(n,1) > n){
cat("Abundante")
}
else{
cat("Defectivo")
}
}
}
clasificacion(6)
clasificacion(47)
clasificacion(10)
clasificacion(6)
clasificacion(47)
clasificacion(10)
clasificacion(6)
clasificacion(47)
clasificacion(12)
U(10)
U(2)
U(12)
matriz.ejemplo <- data.frame(replicate(10,sample(0:999,3,rep=TRUE)))
matriz.ejemplo
matriz.ejemplo <- data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
matriz.ejemplo <- data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
matriz.ejemplo
output.data(datos.alumnos,1,2)
output.data(matriz.ejemplo,1,2)
output.data(matriz.ejemplo.2,1,2)
matriz.ejemplo <- data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
matriz.ejemplo.2 <- data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
output.data(datos.alumnos,1,2)
output.data(matriz.ejemplo,1,2)
output.data(matriz.ejemplo.2,1,2)
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3<-function(dataframe){
columnas <- ncol(dataframe)
cantidad = 0
for(i in 1:(columnas - 1)){
n<- dim(dataframe)[i]
m<- dim(dataframe)[(i+1)]
for(i in 1:n){
for(j in 1:m){
if(dataframe[i,j]%%3==0){
cantidad= cantidad+1
}
}
}
}
return(cantidad)
}
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
output.data(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
output.data(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
output.data(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
output.data(data.frame(replicate(3,sample(0:999,3,rep=TRUE))),1,2)
output.data(data.frame(replicate(3,sample(0:999,3,rep=TRUE))),1,2)
output.data(data.frame(replicate(3,sample(0:999,3,rep=TRUE))),1,2)
output.data(data.frame(replicate(3,sample(0:999,3,rep=TRUE))),1,2)
output.data(data.frame(replicate(3,sample(0:999,3,rep=TRUE))),1,3)
output.data(data.frame(replicate(3,sample(0:999,3,rep=TRUE))),2,3)
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3<-function(df){
length(lapply(df, function(x){
if((x%%3)==0){
return (x)
}
}))
}
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3<-function(dataframe){
cantidad = 0
for(i in 1:ncol(dataframe)) {
if(( dataframe[ , i]%% 3) == 0){
cantidad = cantidad + 1
}
}
}
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
data.frame(replicate(3,sample(0:999,3,rep=TRUE))),1,2)
data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
as.matrix
as.matrix(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
divisible.3<-function(dataframe){
cantidad = 0
datafram1 = as.matrix(dataframe)
for(i in 1:ncol(datafram1)) {
if(( datafram1[ i, i]%% 3) == 0){
cantidad = cantidad + 1
}
}
}
divisible.3(data.frame(replicate(3,sample(0:999,3,rep=TRUE))))
df = data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
df
divisible.3(df)
divisible.3(df)
divisible.3<-function(dataframe){
cantidad = 0
datafram1 = as.matrix(dataframe)
for(i in 1:ncol(datafram1)) {
if(( datafram1[ i, i]%% 3) == 0){
cantidad = cantidad + 1
}
}
return (cantidad)
}
df = data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
df
divisible.3(df)
df = data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
df
divisible.3(df)
df1 = data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
df1
divisible.3(df1)
df2 = data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
df2
divisible.3(df2)
divisible.3<-function(dataframe){
cantidad = 0
datafram1 = as.matrix(dataframe)
for(i in 1:ncol(datafram1)) {
if(( datafram1[ i, i]%% 3) == 0){
cantidad = cantidad + 1
}
}
return (cantidad)
}
df = data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
df
divisible.3(df)
df1 = data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
df1
divisible.3(df1)
df2 = data.frame(replicate(3,sample(0:999,3,rep=TRUE)))
df2
divisible.3(df2)
es.factor <- function(x, k){
if((k %% x) == 0){
return (TRUE)
}
return (FALSE)
}
suma.factores <- function(x,k){
if(k > ((x/2)+1)){
return (0)
}
else{
if(es.factor(x,k)){
return (k + suma.factores(x,(k+1)))
}
else{
return (suma.factores(x,(k+1)))
}
}
}
clasificacion <- function(n){
if(suma.factores(n,1) == n){
cat("Perfecto")
}
else{
if(suma.factores(n,1) > n){
cat("Abundante")
}
else{
cat("Defectivo")
}
}
}
clasificacion(6)
clasificacion(47)
clasificacion(12)
output.data(data.frame(replicate(3,sample(0:999,3,rep=TRUE))),2,3)
es.factor <- function(x, k){
if((x %% k) == 0){
return (TRUE)
}
return (FALSE)
}
suma.factores <- function(x,k){
if(k > ((x/2)+1)){
return (0)
}
else{
if(es.factor(x,k)){
return (k + suma.factores(x,(k+1)))
}
else{
return (suma.factores(x,(k+1)))
}
}
}
clasificacion <- function(n){
if(suma.factores(n,1) == n){
cat("Perfecto")
}
else{
if(suma.factores(n,1) > n){
cat("Abundante")
}
else{
cat("Defectivo")
}
}
}
clasificacion(6)
clasificacion(47)
clasificacion(12)
